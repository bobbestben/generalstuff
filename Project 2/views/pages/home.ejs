<%- include('../partials/header'); %>

<div id="page-home">
    <div id="homepage-cover">
        <div class="container">
            <div class="mt-3" id="map"></div>
            <input type="text" class="icon btn btn-light my-2" id="search-input" placeholder="Search Carpark or Carpark Code"/>
            <div class="carpark-list-header-near">NEAREST CAR PARKS</div>
            <div class="carpark-list-header-all">All CAR PARKS</div>
            <ul class="overflow-auto" id="carpark-list">
                <!-- <li> from script below will be appended here -->
            </ul>
        </div>
    </div>
</div>

</main>

<footer id="page-footer">
    <div class="container">
        <p>All rights reserved</p>
    </div>
</footer>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/js/bootstrap.bundle.min.js" integrity="sha384-pprn3073KE6tl6bjs2QrFaJGz5/SUsLqktiwsUTF55Jfv3qYSDhgCecCxMW52nD2" crossorigin="anonymous"></script>

<!-- Leaflet JS File -->
<script
    src="https://unpkg.com/leaflet@1.8.0/dist/leaflet.js"
    integrity="sha512-BB3hKbKWOc9Ez/TAwyWxNXeoV9c1v6FIeYiBieIWkpLjauysF18NzgR1MBNBXf8/KABdlkX68nAhlwcDFLGPCQ=="
    crossorigin=""
></script>

<script>
    //conversion gets messy when passing object here, hence we convert to JSONstring, then parse
    let carparkMapping = `<%- carparkMap %>` 
    carparkMapping = JSON.parse(carparkMapping)
    console.log(carparkMapping.length)

    // Getting my DOM elements
    let filteredList = null
    const search = document.querySelector('#search-input')
    const carparkSection = document.querySelector('#carpark-list')

    // Show Full Carpark List Initially
    carparkMapping.forEach( carpark => {
        const carparkA = document.createElement('a')
        carparkA.setAttribute('class','nav-link carpark-li')
        carparkA.setAttribute('href', `/${carpark.CarParkID}`)
        carparkA.innerText = carpark.Development + '  (CP ' + carpark.CarParkID + ' )'
        const carparkLi = document.createElement('li')
        carparkLi.append(carparkA)
        carparkSection.append(carparkLi)
        console.log('fullList ran')

    })

    // Show Filtered List onChange to Search input.value
    search.onchange = () => {
        console.log(search.value)
        filteredList = carparkMapping.filter( carpark => {
            return carpark.Development.toLowerCase().includes(search.value.toLowerCase())
        })
        console.log('filteredList', filteredList)

        carparkSection.innerHTML = "";

        if (filteredList.length == 0) {
            const carparkLi = document.createElement('li')
            carparkLi.innerText = "No Carpark Found"
            carparkSection.append(carparkLi)
            console.log('message ran')
            return
        }

        filteredList.forEach( carpark => {
            const carparkA = document.createElement('a')
            carparkA.setAttribute('class','nav-link')
            carparkA.setAttribute('href', `/${carpark.CarParkID}`)
            carparkA.innerText = carpark.Development + '  (CP ' + carpark.CarParkID + ' )'
            const carparkLi = document.createElement('li')
            carparkLi.append(carparkA)
            carparkSection.append(carparkLi)
            console.log('filteredList ran')
        })
    }

    // Setting Up Map - default X,Y coordinates if location is disabled
    let currentX = 1.29375;
    let currentY = 103.85718;
    var map;

    const createMap = () => {
        // Create map
        map = L.map("map", { doubleClickZoom: false }).locate({
            setView: true,
            // maxZoom: 19,
        });
        map = map.setZoom(19);
        L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
            maxZoom: 19,
            minZoom: 11,
            attribution: "Â© OpenStreetMap",
        }).addTo(map);

        // Obtain Carpark Coordinates(type: string), convert to integer, then add marker
        // const carparkInfo = carparkData.value.map((carpark) => {
        const carparkInfo = carparkMapping.map((carpark) => {
            [x, y] = carpark.Location.split(" ");
            const carparkID = carpark.CarParkID;
            const carparkName = carpark.Development;
            const data = [x, y, carparkID, carparkName];
            return data;
        });

        carparkInfo.forEach( (carpark) => {
            const marker = L.marker([carpark[0], carpark[1]], {
                myUrl: `http://localhost:3000/${carpark[2]}`
            })
            .addTo(map)
            .bindTooltip("<a>" + `<b>CP ${carpark[2]}</b><br>${carpark[3]}<br>` + "</a>", { direction: "top" })
            .on('click', function(evt) {
                window.open(evt.target.options.myUrl, '_self');
            });
        })
    };

    createMap();

</script>

</body>

</html>